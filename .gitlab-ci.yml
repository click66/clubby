stages:
  # - test
  - infra
  - deploy

include:
  - "frontend/.gitlab-ci.yml"
  - "frontend-members/.gitlab-ci.yml"
  - "services/attendance/.gitlab-ci.yml"
  - "workers/backup/.gitlab-ci.yml"
  # - "workers/attendance/.gitlab-ci.yml"

terraform:
  stage: infra
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker compose -f docker-compose.yml build terraform
    - docker compose -f docker-compose.yml run --rm terraform init -input=false
    - docker compose -f docker-compose.yml run --rm terraform plan -out=tfplan -input=false
    - docker compose -f docker-compose.yml run --rm terraform apply -input=false tfplan
  only:
    refs:
      - main
    changes:
      - terraform/**/*
  variables:
    AWS_ACCESS_KEY_ID: $TERRAFORM_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $TERRAFORM_AWS_SECRET_ACCESS_KEY

# serverless:
#   stage: infra
#   image: docker:latest
#   services:
#     - docker:dind
#   before_script:
#     - apk add --update npm
#     - npm install -g serverless
#   script:
#     - sls deploy --stage prod
#   only:
#     - main
#   variables:
#     AWS_ACCESS_KEY_ID: $TERRAFORM_AWS_ACCESS_KEY_ID
#     AWS_SECRET_ACCESS_KEY: $TERRAFORM_AWS_SECRET_ACCESS_KEY

deploy-monolith:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 082624796438.dkr.ecr.eu-west-2.amazonaws.com
    - aws --version
    - docker info
    - docker --version
  script:
    - docker build -t 082624796438.dkr.ecr.eu-west-2.amazonaws.com/clubby/app:latest -f Dockerfile --target prod-runtime .
    - docker build -t 082624796438.dkr.ecr.eu-west-2.amazonaws.com/clubby/nginx:latest -f Dockerfile.nginx .
    - docker push 082624796438.dkr.ecr.eu-west-2.amazonaws.com/clubby/app
    - docker push 082624796438.dkr.ecr.eu-west-2.amazonaws.com/clubby/nginx
    - aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
  only:
    refs:
      - main
    changes:
      - sjcadmin/**/*
  variables:
    AWS_ACCESS_KEY_ID: $DEPLOY_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $DEPLOY_AWS_SECRET_ACCESS_KEY
    ECS_CLUSTER: "CS-ECS-01"
    ECS_SERVICE: "clubby"
