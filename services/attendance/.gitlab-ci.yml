# test-attendance-service:
#   stage: test
#   image: docker:latest
#   services:
#     - docker:dind
#   script:
#     - docker compose -f docker-compose.yml run --rm --no-deps attendance-service poetry run pytest tests/unit
#     - docker compose -f docker-compose.yml up -d attendance-service
#     - docker compose -f docker-compose.yml exec attendance-service poetry run alembic upgrade head
#     - docker compose -f docker-compose.yml exec attendance-service poetry run pytest tests/api
#     - docker compose -f docker-compose.yml down -v

terraform-attendance-service:
  stage: infra
  image:
    name: hashicorp/terraform
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  before_script:
    - cd services/attendance/terraform
  script:
    - terraform init -input=false
    - terraform plan -out=tfplan -input=false
    - terraform apply -input=false tfplan
  only:
    - main
  variables:
    AWS_ACCESS_KEY_ID: $TERRAFORM_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $TERRAFORM_AWS_SECRET_ACCESS_KEY

deploy-attendance-service:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 082624796438.dkr.ecr.eu-west-2.amazonaws.com
    - aws --version
    - docker info
    - docker --version
  script:
    - docker build -t 082624796438.dkr.ecr.eu-west-2.amazonaws.com/sjcadmin-attendance/app --target prod-runtime services/attendance
    - docker push 082624796438.dkr.ecr.eu-west-2.amazonaws.com/sjcadmin-attendance/app
    - aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
  only:
    - main
  variables:
    AWS_ACCESS_KEY_ID: $DEPLOY_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $DEPLOY_AWS_SECRET_ACCESS_KEY
    ECS_CLUSTER: "CS-ECS-02"
    ECS_SERVICE: "sjcadmin-attendance"
